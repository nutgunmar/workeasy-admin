"use client";

import { useState, useEffect } from "react";
import { Button, Typography, Alert, Space, message } from "antd";
import { CopyOutlined } from "@ant-design/icons";
import { QRCodeCanvas } from "qrcode.react";
import styles from "./styles.module.css";

const { Title, Paragraph, Text } = Typography;

const thaiNames = [
  "‡∏™‡∏°‡∏ä‡∏≤‡∏¢",
  "‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á",
  "‡∏ß‡∏¥‡πÑ‡∏•",
  "‡∏õ‡∏£‡∏∞‡πÄ‡∏™‡∏£‡∏¥‡∏ê",
  "‡∏™‡∏∏‡∏ô‡∏µ‡∏¢‡πå",
  "‡∏ò‡∏ô‡∏≤‡∏Å‡∏£",
  "‡∏°‡∏¥‡∏ô‡∏ï‡∏£‡∏≤",
  "‡∏ä‡∏±‡∏¢‡∏ß‡∏±‡∏í‡∏ô‡πå",
  "‡∏ô‡∏ß‡∏•‡∏û‡∏£‡∏£‡∏ì",
  "‡∏à‡∏±‡∏Å‡∏£‡∏û‡∏á‡∏©‡πå",
];
const thaiSurnames = [
  "‡πÉ‡∏à‡∏î‡∏µ",
  "‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°",
  "‡∏£‡∏∏‡πà‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á",
  "‡∏™‡∏∏‡∏Ç‡∏™‡∏±‡∏ô‡∏ï‡πå",
  "‡∏õ‡∏£‡∏∞‡πÄ‡∏™‡∏£‡∏¥‡∏ê",
  "‡∏ß‡∏¥‡∏ö‡∏π‡∏•‡∏¢‡πå",
  "‡∏ä‡∏±‡∏¢‡∏¢‡∏∏‡∏ó‡∏ò",
  "‡∏ô‡∏≤‡∏Ñ‡∏£‡∏≤‡∏ä",
  "‡πÅ‡∏™‡∏á‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå",
  "‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß",
];
const photoFiles = ["photo1.jpg", "photo2.jpg", "photo3.jpg"]; // ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô public/images/photos

interface FakeID {
  id: string;
  fullName: string;
  birthDate: string;
  address: string;
  photo: string;
}

export default function ThaiIDGenerator() {
  const [fakeID, setFakeID] = useState<FakeID | null>(null);

  const generateThaiID = (): string => {
    const d1 = Math.floor(Math.random() * 8) + 1;
    const province = Math.floor(Math.random() * 90) + 10;
    const d2 = Math.floor(province / 10);
    const d3 = province % 10;
    const district = Math.floor(Math.random() * 99) + 1;
    const d4 = Math.floor(district / 10);
    const d5 = district % 10;
    const seq = Math.floor(Math.random() * 10000000);
    const d6 = Math.floor(seq / 1000000) % 10;
    const d7 = Math.floor(seq / 100000) % 10;
    const d8 = Math.floor(seq / 10000) % 10;
    const d9 = Math.floor(seq / 1000) % 10;
    const d10 = Math.floor(seq / 100) % 10;
    const d11 = Math.floor(seq / 10) % 10;
    const d12 = seq % 10;
    const digits = [d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12];
    let sum = 0;
    for (let i = 0; i < 12; i++) {
      sum += digits[i] * (13 - i);
    }
    let check = 11 - (sum % 11);
    if (check > 9) check = 0;
    return digits.join("") + check.toString();
  };

  const generateFakeData = (): FakeID => {
    const id = generateThaiID();
    const firstName = thaiNames[Math.floor(Math.random() * thaiNames.length)];
    const lastName =
      thaiSurnames[Math.floor(Math.random() * thaiSurnames.length)];
    const fullName = `${firstName} ${lastName}`;
    const birthYear = 1965 + Math.floor(Math.random() * 40);
    const birthMonth = Math.floor(Math.random() * 12) + 1;
    const birthDay = Math.floor(Math.random() * 28) + 1;
    const birthDate = `${birthDay.toString().padStart(2, "0")}/${birthMonth
      .toString()
      .padStart(2, "0")}/${birthYear}`;
    const provinces = [
      "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£",
      "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
      "‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô",
      "‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ",
      "‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤",
    ];
    const address = `123/45 ‡∏´‡∏°‡∏π‡πà 6 ‡∏ï.‡∏ö‡∏≤‡∏á‡πÅ‡∏™‡∏ô ‡∏≠.‡∏ö‡∏≤‡∏á‡∏•‡∏∞‡∏°‡∏∏‡∏á ‡∏à.${
      provinces[Math.floor(Math.random() * provinces.length)]
    } 20000`;
    const photo = `/images/photos/${
      photoFiles[Math.floor(Math.random() * photoFiles.length)]
    }`;
    return { id, fullName, birthDate, address, photo };
  };

  const handleGenerate = () => {
    const newID = generateFakeData();
    setFakeID(newID);
    navigator.clipboard.writeText(newID.id).then(() => {
      message.success("‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÅ‡∏•‡πâ‡∏ß!");
    });
  };

  useEffect(() => {
    handleGenerate();
  }, []);

  return (
    <div className={styles.container}>
      <Title level={1} className={styles.header}>
        ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÑ‡∏ó‡∏¢ 13 ‡∏´‡∏•‡∏±‡∏Å üáπüá≠
      </Title>
      <Paragraph className={styles.intro}>
        ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏•‡∏Ç‡∏à‡∏£‡∏¥‡∏á
        ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
      </Paragraph>

      {fakeID && (
        <div className={styles.cardContainer}>
          <div className={styles.idCard}>
            <div className={styles.cardHeader}>
              <img src={fakeID.photo} alt="‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢" className={styles.photo} />
              <div className={styles.personalInfo}>
                <Title level={4} className={styles.name}>
                  {fakeID.fullName}
                </Title>
                <Paragraph>‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</Paragraph>
                <Title level={2} className={styles.idNumber}>
                  {fakeID.id}
                </Title>
                <Paragraph>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î: {fakeID.birthDate}</Paragraph>
                <Paragraph>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: {fakeID.address}</Paragraph>
              </div>
            </div>
            <div className={styles.cardFooter}>
              <QRCodeCanvas
                value={fakeID.id}
                size={80}
                className={styles.qrCode}
              />
              <div className={styles.thaiFlag}>üáπüá≠</div>
            </div>
          </div>
          <Space className={styles.actions}>
            <Button
              type="primary"
              icon={<CopyOutlined />}
              onClick={() =>
                navigator.clipboard
                  .writeText(fakeID.id)
                  .then(() => message.success("‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß!"))
              }
            >
              ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£
            </Button>
            <Button onClick={handleGenerate}>‡∏™‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà</Button>
          </Space>
        </div>
      )}

      <div className={styles.explanation}>
        <Title level={3}>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏Å</Title>
        <Paragraph>
          <Text strong>‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà 1:</Text> ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ã‡∏∂‡πà‡∏á‡∏°‡∏µ 8 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó (‡πÄ‡∏ä‡πà‡∏ô
          ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1: ‡∏Ñ‡∏ô‡πÑ‡∏ó‡∏¢‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏Å‡∏¥‡∏î‡∏ó‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤, ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 2: ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î,
          ‡∏Ø‡∏•‡∏Ø)
        </Paragraph>
        <Paragraph>
          <Text strong>‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà 2-3:</Text>{" "}
          ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ö‡πâ‡∏≤‡∏ô
        </Paragraph>
        <Paragraph>
          <Text strong>‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà 4-5:</Text>{" "}
          ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏®‡∏ö‡∏≤‡∏•‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ö‡πâ‡∏≤‡∏ô
        </Paragraph>
        <Paragraph>
          <Text strong>‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà 6-10:</Text>{" "}
          ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡πà‡∏°‡∏™‡∏π‡∏ï‡∏¥‡∏ö‡∏±‡∏ï‡∏£
        </Paragraph>
        <Paragraph>
          <Text strong>‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà 11-12:</Text>{" "}
          ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ö‡∏™‡∏π‡∏ï‡∏¥‡∏ö‡∏±‡∏ï‡∏£
        </Paragraph>
        <Paragraph>
          <Text strong>‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà 13:</Text> ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á 12 ‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏£‡∏Å
        </Paragraph>
      </div>

      <Alert
        message="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"
        description="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏≠‡∏Å‡∏•‡∏ß‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏¥‡∏î‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢"
        type="warning"
        showIcon
        className={styles.note}
      />
    </div>
  );
}
